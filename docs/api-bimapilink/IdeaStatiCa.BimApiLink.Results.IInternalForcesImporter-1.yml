### YamlMime:ManagedReference
items:
- uid: IdeaStatiCa.BimApiLink.Results.IInternalForcesImporter`1
  commentId: T:IdeaStatiCa.BimApiLink.Results.IInternalForcesImporter`1
  id: IInternalForcesImporter`1
  parent: IdeaStatiCa.BimApiLink.Results
  children:
  - IdeaStatiCa.BimApiLink.Results.IInternalForcesImporter`1.GetResults(System.Collections.Generic.IReadOnlyList{`0})
  langs:
  - csharp
  - vb
  name: IInternalForcesImporter<T>
  nameWithType: IInternalForcesImporter<T>
  fullName: IdeaStatiCa.BimApiLink.Results.IInternalForcesImporter<T>
  type: Interface
  source:
    remote:
      path: src/IdeaStatica.BimApiLink/Results/IInternalForcesImporter.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: IInternalForcesImporter
    path: ../src/IdeaStatica.BimApiLink/Results/IInternalForcesImporter.cs
    startLine: 5
  assemblies:
  - IdeaStatiCa.BimApiLink
  namespace: IdeaStatiCa.BimApiLink.Results
  syntax:
    content: 'public interface IInternalForcesImporter<T> where T : IIdeaObjectWithResults'
    typeParameters:
    - id: T
    content.vb: Public Interface IInternalForcesImporter(Of T As IIdeaObjectWithResults)
  nameWithType.vb: IInternalForcesImporter(Of T)
  fullName.vb: IdeaStatiCa.BimApiLink.Results.IInternalForcesImporter(Of T)
  name.vb: IInternalForcesImporter(Of T)
- uid: IdeaStatiCa.BimApiLink.Results.IInternalForcesImporter`1.GetResults(System.Collections.Generic.IReadOnlyList{`0})
  commentId: M:IdeaStatiCa.BimApiLink.Results.IInternalForcesImporter`1.GetResults(System.Collections.Generic.IReadOnlyList{`0})
  id: GetResults(System.Collections.Generic.IReadOnlyList{`0})
  parent: IdeaStatiCa.BimApiLink.Results.IInternalForcesImporter`1
  langs:
  - csharp
  - vb
  name: GetResults(IReadOnlyList<T>)
  nameWithType: IInternalForcesImporter<T>.GetResults(IReadOnlyList<T>)
  fullName: IdeaStatiCa.BimApiLink.Results.IInternalForcesImporter<T>.GetResults(System.Collections.Generic.IReadOnlyList<T>)
  type: Method
  source:
    remote:
      path: src/IdeaStatica.BimApiLink/Results/IInternalForcesImporter.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: GetResults
    path: ../src/IdeaStatica.BimApiLink/Results/IInternalForcesImporter.cs
    startLine: 8
  assemblies:
  - IdeaStatiCa.BimApiLink
  namespace: IdeaStatiCa.BimApiLink.Results
  syntax:
    content: IEnumerable<ResultsData<T>> GetResults(IReadOnlyList<T> objects)
    parameters:
    - id: objects
      type: System.Collections.Generic.IReadOnlyList{{T}}
    return:
      type: System.Collections.Generic.IEnumerable{IdeaStatiCa.BimApiLink.Results.ResultsData{{T}}}
    content.vb: Function GetResults(objects As IReadOnlyList(Of T)) As IEnumerable(Of ResultsData(Of T))
  overload: IdeaStatiCa.BimApiLink.Results.IInternalForcesImporter`1.GetResults*
  nameWithType.vb: IInternalForcesImporter(Of T).GetResults(IReadOnlyList(Of T))
  fullName.vb: IdeaStatiCa.BimApiLink.Results.IInternalForcesImporter(Of T).GetResults(System.Collections.Generic.IReadOnlyList(Of T))
  name.vb: GetResults(IReadOnlyList(Of T))
references:
- uid: IdeaStatiCa.BimApiLink.Results
  commentId: N:IdeaStatiCa.BimApiLink.Results
  href: IdeaStatiCa.html
  name: IdeaStatiCa.BimApiLink.Results
  nameWithType: IdeaStatiCa.BimApiLink.Results
  fullName: IdeaStatiCa.BimApiLink.Results
  spec.csharp:
  - uid: IdeaStatiCa
    name: IdeaStatiCa
    href: IdeaStatiCa.html
  - name: .
  - uid: IdeaStatiCa.BimApiLink
    name: BimApiLink
    href: IdeaStatiCa.BimApiLink.html
  - name: .
  - uid: IdeaStatiCa.BimApiLink.Results
    name: Results
    href: IdeaStatiCa.BimApiLink.Results.html
  spec.vb:
  - uid: IdeaStatiCa
    name: IdeaStatiCa
    href: IdeaStatiCa.html
  - name: .
  - uid: IdeaStatiCa.BimApiLink
    name: BimApiLink
    href: IdeaStatiCa.BimApiLink.html
  - name: .
  - uid: IdeaStatiCa.BimApiLink.Results
    name: Results
    href: IdeaStatiCa.BimApiLink.Results.html
- uid: IdeaStatiCa.BimApiLink.Results.IInternalForcesImporter`1.GetResults*
  commentId: Overload:IdeaStatiCa.BimApiLink.Results.IInternalForcesImporter`1.GetResults
  href: IdeaStatiCa.BimApiLink.Results.IInternalForcesImporter-1.html#IdeaStatiCa.BimApiLink.Results.IInternalForcesImporter`1.GetResults(System.Collections.Generic.IReadOnlyList{`0})
  name: GetResults
  nameWithType: IInternalForcesImporter<T>.GetResults
  fullName: IdeaStatiCa.BimApiLink.Results.IInternalForcesImporter<T>.GetResults
  nameWithType.vb: IInternalForcesImporter(Of T).GetResults
  fullName.vb: IdeaStatiCa.BimApiLink.Results.IInternalForcesImporter(Of T).GetResults
- uid: System.Collections.Generic.IReadOnlyList{{T}}
  commentId: T:System.Collections.Generic.IReadOnlyList{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable{IdeaStatiCa.BimApiLink.Results.ResultsData{{T}}}
  commentId: T:System.Collections.Generic.IEnumerable{IdeaStatiCa.BimApiLink.Results.ResultsData{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ResultsData<T>>
  nameWithType: IEnumerable<ResultsData<T>>
  fullName: System.Collections.Generic.IEnumerable<IdeaStatiCa.BimApiLink.Results.ResultsData<T>>
  nameWithType.vb: IEnumerable(Of ResultsData(Of T))
  fullName.vb: System.Collections.Generic.IEnumerable(Of IdeaStatiCa.BimApiLink.Results.ResultsData(Of T))
  name.vb: IEnumerable(Of ResultsData(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: IdeaStatiCa.BimApiLink.Results.ResultsData`1
    name: ResultsData
    href: IdeaStatiCa.BimApiLink.Results.ResultsData-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: IdeaStatiCa.BimApiLink.Results.ResultsData`1
    name: ResultsData
    href: IdeaStatiCa.BimApiLink.Results.ResultsData-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
