### YamlMime:ManagedReference
items:
- uid: IdeaStatiCa.BimApi.IIdeaTaper
  commentId: T:IdeaStatiCa.BimApi.IIdeaTaper
  id: IIdeaTaper
  parent: IdeaStatiCa.BimApi
  children:
  - IdeaStatiCa.BimApi.IIdeaTaper.Spans
  langs:
  - csharp
  - vb
  name: IIdeaTaper
  nameWithType: IIdeaTaper
  fullName: IdeaStatiCa.BimApi.IIdeaTaper
  type: Interface
  source:
    remote:
      path: src/IdeaStatiCa.BimApi/IIdeaTaper.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: IIdeaTaper
    path: ../src/IdeaStatiCa.BimApi/IIdeaTaper.cs
    startLine: 10
  assemblies:
  - IdeaStatiCa.BimApi
  namespace: IdeaStatiCa.BimApi
  summary: >-
    Defines haunches (variyng cross-sections) along the member.


    One <xref href="IdeaStatiCa.BimApi.IIdeaTaper" data-throw-if-not-resolved="false"></xref> may be assigned to multiple <xref href="IdeaStatiCa.BimApi.IIdeaMember1D?text=Members" data-throw-if-not-resolved="false"></xref>.

    Sections of the member not covered by a span will use the member's cross-section.
  example: []
  syntax:
    content: 'public interface IIdeaTaper : IIdeaObject'
    content.vb: Public Interface IIdeaTaper Inherits IIdeaObject
  inheritedMembers:
  - IdeaStatiCa.BimApi.IIdeaObject.Id
  - IdeaStatiCa.BimApi.IIdeaObject.Name
- uid: IdeaStatiCa.BimApi.IIdeaTaper.Spans
  commentId: P:IdeaStatiCa.BimApi.IIdeaTaper.Spans
  id: Spans
  parent: IdeaStatiCa.BimApi.IIdeaTaper
  langs:
  - csharp
  - vb
  name: Spans
  nameWithType: IIdeaTaper.Spans
  fullName: IdeaStatiCa.BimApi.IIdeaTaper.Spans
  type: Property
  source:
    remote:
      path: src/IdeaStatiCa.BimApi/IIdeaTaper.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: Spans
    path: ../src/IdeaStatiCa.BimApi/IIdeaTaper.cs
    startLine: 15
  assemblies:
  - IdeaStatiCa.BimApi
  namespace: IdeaStatiCa.BimApi
  summary: List of <xref href="IdeaStatiCa.BimApi.IIdeaSpan?text=spans" data-throw-if-not-resolved="false"></xref>. Spans mut not overlap.
  example: []
  syntax:
    content: IEnumerable<IIdeaSpan> Spans { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{IdeaStatiCa.BimApi.IIdeaSpan}
    content.vb: ReadOnly Property Spans As IEnumerable(Of IIdeaSpan)
  overload: IdeaStatiCa.BimApi.IIdeaTaper.Spans*
references:
- uid: IdeaStatiCa.BimApi.IIdeaTaper
  commentId: T:IdeaStatiCa.BimApi.IIdeaTaper
  parent: IdeaStatiCa.BimApi
  href: IdeaStatiCa.BimApi.IIdeaTaper.html
  name: IIdeaTaper
  nameWithType: IIdeaTaper
  fullName: IdeaStatiCa.BimApi.IIdeaTaper
- uid: IdeaStatiCa.BimApi.IIdeaMember1D
  commentId: T:IdeaStatiCa.BimApi.IIdeaMember1D
  parent: IdeaStatiCa.BimApi
  href: IdeaStatiCa.BimApi.IIdeaMember1D.html
  name: IIdeaMember1D
  nameWithType: IIdeaMember1D
  fullName: IdeaStatiCa.BimApi.IIdeaMember1D
- uid: IdeaStatiCa.BimApi
  commentId: N:IdeaStatiCa.BimApi
  href: IdeaStatiCa.html
  name: IdeaStatiCa.BimApi
  nameWithType: IdeaStatiCa.BimApi
  fullName: IdeaStatiCa.BimApi
  spec.csharp:
  - uid: IdeaStatiCa
    name: IdeaStatiCa
    href: IdeaStatiCa.html
  - name: .
  - uid: IdeaStatiCa.BimApi
    name: BimApi
    href: IdeaStatiCa.BimApi.html
  spec.vb:
  - uid: IdeaStatiCa
    name: IdeaStatiCa
    href: IdeaStatiCa.html
  - name: .
  - uid: IdeaStatiCa.BimApi
    name: BimApi
    href: IdeaStatiCa.BimApi.html
- uid: IdeaStatiCa.BimApi.IIdeaObject.Id
  commentId: P:IdeaStatiCa.BimApi.IIdeaObject.Id
  parent: IdeaStatiCa.BimApi.IIdeaObject
  href: IdeaStatiCa.BimApi.IIdeaObject.html#IdeaStatiCa.BimApi.IIdeaObject.Id
  name: Id
  nameWithType: IIdeaObject.Id
  fullName: IdeaStatiCa.BimApi.IIdeaObject.Id
- uid: IdeaStatiCa.BimApi.IIdeaObject.Name
  commentId: P:IdeaStatiCa.BimApi.IIdeaObject.Name
  parent: IdeaStatiCa.BimApi.IIdeaObject
  href: IdeaStatiCa.BimApi.IIdeaObject.html#IdeaStatiCa.BimApi.IIdeaObject.Name
  name: Name
  nameWithType: IIdeaObject.Name
  fullName: IdeaStatiCa.BimApi.IIdeaObject.Name
- uid: IdeaStatiCa.BimApi.IIdeaObject
  commentId: T:IdeaStatiCa.BimApi.IIdeaObject
  parent: IdeaStatiCa.BimApi
  href: IdeaStatiCa.BimApi.IIdeaObject.html
  name: IIdeaObject
  nameWithType: IIdeaObject
  fullName: IdeaStatiCa.BimApi.IIdeaObject
- uid: IdeaStatiCa.BimApi.IIdeaSpan
  commentId: T:IdeaStatiCa.BimApi.IIdeaSpan
  href: IdeaStatiCa.BimApi.IIdeaSpan.html
  name: IIdeaSpan
  nameWithType: IIdeaSpan
  fullName: IdeaStatiCa.BimApi.IIdeaSpan
- uid: IdeaStatiCa.BimApi.IIdeaTaper.Spans*
  commentId: Overload:IdeaStatiCa.BimApi.IIdeaTaper.Spans
  href: IdeaStatiCa.BimApi.IIdeaTaper.html#IdeaStatiCa.BimApi.IIdeaTaper.Spans
  name: Spans
  nameWithType: IIdeaTaper.Spans
  fullName: IdeaStatiCa.BimApi.IIdeaTaper.Spans
- uid: System.Collections.Generic.IEnumerable{IdeaStatiCa.BimApi.IIdeaSpan}
  commentId: T:System.Collections.Generic.IEnumerable{IdeaStatiCa.BimApi.IIdeaSpan}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IIdeaSpan>
  nameWithType: IEnumerable<IIdeaSpan>
  fullName: System.Collections.Generic.IEnumerable<IdeaStatiCa.BimApi.IIdeaSpan>
  nameWithType.vb: IEnumerable(Of IIdeaSpan)
  fullName.vb: System.Collections.Generic.IEnumerable(Of IdeaStatiCa.BimApi.IIdeaSpan)
  name.vb: IEnumerable(Of IIdeaSpan)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: IdeaStatiCa.BimApi.IIdeaSpan
    name: IIdeaSpan
    href: IdeaStatiCa.BimApi.IIdeaSpan.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: IdeaStatiCa.BimApi.IIdeaSpan
    name: IIdeaSpan
    href: IdeaStatiCa.BimApi.IIdeaSpan.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
