### YamlMime:ManagedReference
items:
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  commentId: T:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  id: GrpcBlobStorageService.GrpcBlobStorageServiceClient
  parent: IdeaStatiCa.Plugin.Grpc
  children:
  - IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.#ctor
  - IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.#ctor(Grpc.Core.CallInvoker)
  - IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.#ctor(Grpc.Core.ChannelBase)
  - IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)
  - IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Delete(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.CallOptions)
  - IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Delete(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.DeleteAsync(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.CallOptions)
  - IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.DeleteAsync(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Exist(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.CallOptions)
  - IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Exist(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.ExistAsync(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.CallOptions)
  - IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.ExistAsync(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntries(IdeaStatiCa.Plugin.Grpc.GetEntriesRequest,Grpc.Core.CallOptions)
  - IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntries(IdeaStatiCa.Plugin.Grpc.GetEntriesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntriesAsync(IdeaStatiCa.Plugin.Grpc.GetEntriesRequest,Grpc.Core.CallOptions)
  - IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntriesAsync(IdeaStatiCa.Plugin.Grpc.GetEntriesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  - IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Read(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.CallOptions)
  - IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Read(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Write(Grpc.Core.CallOptions)
  - IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Write(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: GrpcBlobStorageService.GrpcBlobStorageServiceClient
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  type: Class
  source:
    remote:
      path: src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: GrpcBlobStorageServiceClient
    path: ../src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
    startLine: 286
  assemblies:
  - IdeaStatiCa.Plugin
  namespace: IdeaStatiCa.Plugin.Grpc
  summary: Client for GrpcBlobStorageService
  example: []
  syntax:
    content: 'public class GrpcBlobStorageService.GrpcBlobStorageServiceClient : ClientBase<GrpcBlobStorageService.GrpcBlobStorageServiceClient>'
    content.vb: Public Class GrpcBlobStorageService.GrpcBlobStorageServiceClient Inherits ClientBase(Of GrpcBlobStorageService.GrpcBlobStorageServiceClient)
  inheritance:
  - System.Object
  - Grpc.Core.ClientBase
  - Grpc.Core.ClientBase{IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient}
  inheritedMembers:
  - Grpc.Core.ClientBase{IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient}.WithHost(System.String)
  - Grpc.Core.ClientBase.CallInvoker
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.#ctor(Grpc.Core.ChannelBase)
  commentId: M:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.#ctor(Grpc.Core.ChannelBase)
  id: '#ctor(Grpc.Core.ChannelBase)'
  parent: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  langs:
  - csharp
  - vb
  name: GrpcBlobStorageServiceClient(ChannelBase)
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.GrpcBlobStorageServiceClient(ChannelBase)
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GrpcBlobStorageServiceClient(Grpc.Core.ChannelBase)
  type: Constructor
  source:
    remote:
      path: src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: .ctor
    path: ../src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
    startLine: 290
  assemblies:
  - IdeaStatiCa.Plugin
  namespace: IdeaStatiCa.Plugin.Grpc
  summary: Creates a new client for GrpcBlobStorageService
  example: []
  syntax:
    content: public GrpcBlobStorageServiceClient(ChannelBase channel)
    parameters:
    - id: channel
      type: Grpc.Core.ChannelBase
      description: The channel to use to make remote calls.
    content.vb: Public Sub New(channel As ChannelBase)
  overload: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.#ctor*
  nameWithType.vb: GrpcBlobStorageService.GrpcBlobStorageServiceClient.New(ChannelBase)
  fullName.vb: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.New(Grpc.Core.ChannelBase)
  name.vb: New(ChannelBase)
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.#ctor(Grpc.Core.CallInvoker)
  commentId: M:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.#ctor(Grpc.Core.CallInvoker)
  id: '#ctor(Grpc.Core.CallInvoker)'
  parent: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  langs:
  - csharp
  - vb
  name: GrpcBlobStorageServiceClient(CallInvoker)
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.GrpcBlobStorageServiceClient(CallInvoker)
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GrpcBlobStorageServiceClient(Grpc.Core.CallInvoker)
  type: Constructor
  source:
    remote:
      path: src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: .ctor
    path: ../src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
    startLine: 296
  assemblies:
  - IdeaStatiCa.Plugin
  namespace: IdeaStatiCa.Plugin.Grpc
  summary: Creates a new client for GrpcBlobStorageService that uses a custom <code>CallInvoker</code>.
  example: []
  syntax:
    content: public GrpcBlobStorageServiceClient(CallInvoker callInvoker)
    parameters:
    - id: callInvoker
      type: Grpc.Core.CallInvoker
      description: The callInvoker to use to make remote calls.
    content.vb: Public Sub New(callInvoker As CallInvoker)
  overload: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.#ctor*
  nameWithType.vb: GrpcBlobStorageService.GrpcBlobStorageServiceClient.New(CallInvoker)
  fullName.vb: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.New(Grpc.Core.CallInvoker)
  name.vb: New(CallInvoker)
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.#ctor
  commentId: M:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.#ctor
  id: '#ctor'
  parent: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  langs:
  - csharp
  - vb
  name: GrpcBlobStorageServiceClient()
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.GrpcBlobStorageServiceClient()
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GrpcBlobStorageServiceClient()
  type: Constructor
  source:
    remote:
      path: src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: .ctor
    path: ../src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
    startLine: 301
  assemblies:
  - IdeaStatiCa.Plugin
  namespace: IdeaStatiCa.Plugin.Grpc
  summary: Protected parameterless constructor to allow creation of test doubles.
  example: []
  syntax:
    content: protected GrpcBlobStorageServiceClient()
    content.vb: Protected Sub New()
  overload: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.#ctor*
  nameWithType.vb: GrpcBlobStorageService.GrpcBlobStorageServiceClient.New()
  fullName.vb: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.New()
  name.vb: New()
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)
  commentId: M:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)
  id: '#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)'
  parent: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  langs:
  - csharp
  - vb
  name: GrpcBlobStorageServiceClient(ClientBaseConfiguration)
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.GrpcBlobStorageServiceClient(ClientBase.ClientBaseConfiguration)
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GrpcBlobStorageServiceClient(Grpc.Core.ClientBase.ClientBaseConfiguration)
  type: Constructor
  source:
    remote:
      path: src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: .ctor
    path: ../src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
    startLine: 307
  assemblies:
  - IdeaStatiCa.Plugin
  namespace: IdeaStatiCa.Plugin.Grpc
  summary: Protected constructor to allow creation of configured clients.
  example: []
  syntax:
    content: protected GrpcBlobStorageServiceClient(ClientBase.ClientBaseConfiguration configuration)
    parameters:
    - id: configuration
      type: Grpc.Core.ClientBase.ClientBaseConfiguration
      description: The client configuration.
    content.vb: Protected Sub New(configuration As ClientBase.ClientBaseConfiguration)
  overload: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.#ctor*
  nameWithType.vb: GrpcBlobStorageService.GrpcBlobStorageServiceClient.New(ClientBase.ClientBaseConfiguration)
  fullName.vb: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.New(Grpc.Core.ClientBase.ClientBaseConfiguration)
  name.vb: New(ClientBaseConfiguration)
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Write(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Write(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: Write(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  langs:
  - csharp
  - vb
  name: Write(Metadata, DateTime?, CancellationToken)
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.Write(Metadata, DateTime?, CancellationToken)
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Write(Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: Write
    path: ../src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
    startLine: 319
  assemblies:
  - IdeaStatiCa.Plugin
  namespace: IdeaStatiCa.Plugin.Grpc
  summary: blobStorageId and contentId are in metadata
  example: []
  syntax:
    content: public virtual AsyncClientStreamingCall<ContentData, VoidResponse> Write(Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncClientStreamingCall{IdeaStatiCa.Plugin.Grpc.ContentData,IdeaStatiCa.Plugin.Grpc.VoidResponse}
      description: The call object.
    content.vb: Public Overridable Function Write(headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncClientStreamingCall(Of ContentData, VoidResponse)
  overload: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Write*
  nameWithType.vb: GrpcBlobStorageService.GrpcBlobStorageServiceClient.Write(Metadata, Date?, CancellationToken)
  fullName.vb: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Write(Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: Write(Metadata, Date?, CancellationToken)
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Write(Grpc.Core.CallOptions)
  commentId: M:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Write(Grpc.Core.CallOptions)
  id: Write(Grpc.Core.CallOptions)
  parent: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  langs:
  - csharp
  - vb
  name: Write(CallOptions)
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.Write(CallOptions)
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Write(Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: Write
    path: ../src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
    startLine: 329
  assemblies:
  - IdeaStatiCa.Plugin
  namespace: IdeaStatiCa.Plugin.Grpc
  summary: blobStorageId and contentId are in metadata
  example: []
  syntax:
    content: public virtual AsyncClientStreamingCall<ContentData, VoidResponse> Write(CallOptions options)
    parameters:
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncClientStreamingCall{IdeaStatiCa.Plugin.Grpc.ContentData,IdeaStatiCa.Plugin.Grpc.VoidResponse}
      description: The call object.
    content.vb: Public Overridable Function Write(options As CallOptions) As AsyncClientStreamingCall(Of ContentData, VoidResponse)
  overload: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Write*
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Read(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Read(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: Read(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  langs:
  - csharp
  - vb
  name: Read(ContentRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.Read(ContentRequest, Metadata, DateTime?, CancellationToken)
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Read(IdeaStatiCa.Plugin.Grpc.ContentRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: Read
    path: ../src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
    startLine: 334
  assemblies:
  - IdeaStatiCa.Plugin
  namespace: IdeaStatiCa.Plugin.Grpc
  syntax:
    content: public virtual AsyncServerStreamingCall<ContentData> Read(ContentRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: IdeaStatiCa.Plugin.Grpc.ContentRequest
    - id: headers
      type: Grpc.Core.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: Grpc.Core.AsyncServerStreamingCall{IdeaStatiCa.Plugin.Grpc.ContentData}
    content.vb: Public Overridable Function Read(request As ContentRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncServerStreamingCall(Of ContentData)
  overload: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Read*
  nameWithType.vb: GrpcBlobStorageService.GrpcBlobStorageServiceClient.Read(ContentRequest, Metadata, Date?, CancellationToken)
  fullName.vb: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Read(IdeaStatiCa.Plugin.Grpc.ContentRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: Read(ContentRequest, Metadata, Date?, CancellationToken)
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Read(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.CallOptions)
  commentId: M:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Read(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.CallOptions)
  id: Read(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.CallOptions)
  parent: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  langs:
  - csharp
  - vb
  name: Read(ContentRequest, CallOptions)
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.Read(ContentRequest, CallOptions)
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Read(IdeaStatiCa.Plugin.Grpc.ContentRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: Read
    path: ../src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
    startLine: 339
  assemblies:
  - IdeaStatiCa.Plugin
  namespace: IdeaStatiCa.Plugin.Grpc
  syntax:
    content: public virtual AsyncServerStreamingCall<ContentData> Read(ContentRequest request, CallOptions options)
    parameters:
    - id: request
      type: IdeaStatiCa.Plugin.Grpc.ContentRequest
    - id: options
      type: Grpc.Core.CallOptions
    return:
      type: Grpc.Core.AsyncServerStreamingCall{IdeaStatiCa.Plugin.Grpc.ContentData}
    content.vb: Public Overridable Function Read(request As ContentRequest, options As CallOptions) As AsyncServerStreamingCall(Of ContentData)
  overload: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Read*
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Exist(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Exist(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: Exist(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  langs:
  - csharp
  - vb
  name: Exist(ContentRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.Exist(ContentRequest, Metadata, DateTime?, CancellationToken)
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Exist(IdeaStatiCa.Plugin.Grpc.ContentRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: Exist
    path: ../src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
    startLine: 344
  assemblies:
  - IdeaStatiCa.Plugin
  namespace: IdeaStatiCa.Plugin.Grpc
  syntax:
    content: public virtual ExistResponse Exist(ContentRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: IdeaStatiCa.Plugin.Grpc.ContentRequest
    - id: headers
      type: Grpc.Core.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: IdeaStatiCa.Plugin.Grpc.ExistResponse
    content.vb: Public Overridable Function Exist(request As ContentRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As ExistResponse
  overload: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Exist*
  nameWithType.vb: GrpcBlobStorageService.GrpcBlobStorageServiceClient.Exist(ContentRequest, Metadata, Date?, CancellationToken)
  fullName.vb: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Exist(IdeaStatiCa.Plugin.Grpc.ContentRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: Exist(ContentRequest, Metadata, Date?, CancellationToken)
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Exist(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.CallOptions)
  commentId: M:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Exist(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.CallOptions)
  id: Exist(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.CallOptions)
  parent: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  langs:
  - csharp
  - vb
  name: Exist(ContentRequest, CallOptions)
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.Exist(ContentRequest, CallOptions)
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Exist(IdeaStatiCa.Plugin.Grpc.ContentRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: Exist
    path: ../src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
    startLine: 349
  assemblies:
  - IdeaStatiCa.Plugin
  namespace: IdeaStatiCa.Plugin.Grpc
  syntax:
    content: public virtual ExistResponse Exist(ContentRequest request, CallOptions options)
    parameters:
    - id: request
      type: IdeaStatiCa.Plugin.Grpc.ContentRequest
    - id: options
      type: Grpc.Core.CallOptions
    return:
      type: IdeaStatiCa.Plugin.Grpc.ExistResponse
    content.vb: Public Overridable Function Exist(request As ContentRequest, options As CallOptions) As ExistResponse
  overload: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Exist*
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.ExistAsync(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.ExistAsync(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: ExistAsync(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  langs:
  - csharp
  - vb
  name: ExistAsync(ContentRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.ExistAsync(ContentRequest, Metadata, DateTime?, CancellationToken)
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.ExistAsync(IdeaStatiCa.Plugin.Grpc.ContentRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: ExistAsync
    path: ../src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
    startLine: 354
  assemblies:
  - IdeaStatiCa.Plugin
  namespace: IdeaStatiCa.Plugin.Grpc
  syntax:
    content: public virtual AsyncUnaryCall<ExistResponse> ExistAsync(ContentRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: IdeaStatiCa.Plugin.Grpc.ContentRequest
    - id: headers
      type: Grpc.Core.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: Grpc.Core.AsyncUnaryCall{IdeaStatiCa.Plugin.Grpc.ExistResponse}
    content.vb: Public Overridable Function ExistAsync(request As ContentRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of ExistResponse)
  overload: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.ExistAsync*
  nameWithType.vb: GrpcBlobStorageService.GrpcBlobStorageServiceClient.ExistAsync(ContentRequest, Metadata, Date?, CancellationToken)
  fullName.vb: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.ExistAsync(IdeaStatiCa.Plugin.Grpc.ContentRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: ExistAsync(ContentRequest, Metadata, Date?, CancellationToken)
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.ExistAsync(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.CallOptions)
  commentId: M:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.ExistAsync(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.CallOptions)
  id: ExistAsync(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.CallOptions)
  parent: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  langs:
  - csharp
  - vb
  name: ExistAsync(ContentRequest, CallOptions)
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.ExistAsync(ContentRequest, CallOptions)
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.ExistAsync(IdeaStatiCa.Plugin.Grpc.ContentRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: ExistAsync
    path: ../src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
    startLine: 359
  assemblies:
  - IdeaStatiCa.Plugin
  namespace: IdeaStatiCa.Plugin.Grpc
  syntax:
    content: public virtual AsyncUnaryCall<ExistResponse> ExistAsync(ContentRequest request, CallOptions options)
    parameters:
    - id: request
      type: IdeaStatiCa.Plugin.Grpc.ContentRequest
    - id: options
      type: Grpc.Core.CallOptions
    return:
      type: Grpc.Core.AsyncUnaryCall{IdeaStatiCa.Plugin.Grpc.ExistResponse}
    content.vb: Public Overridable Function ExistAsync(request As ContentRequest, options As CallOptions) As AsyncUnaryCall(Of ExistResponse)
  overload: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.ExistAsync*
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Delete(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Delete(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: Delete(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  langs:
  - csharp
  - vb
  name: Delete(ContentRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.Delete(ContentRequest, Metadata, DateTime?, CancellationToken)
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Delete(IdeaStatiCa.Plugin.Grpc.ContentRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: Delete
    path: ../src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
    startLine: 364
  assemblies:
  - IdeaStatiCa.Plugin
  namespace: IdeaStatiCa.Plugin.Grpc
  syntax:
    content: public virtual VoidResponse Delete(ContentRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: IdeaStatiCa.Plugin.Grpc.ContentRequest
    - id: headers
      type: Grpc.Core.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: IdeaStatiCa.Plugin.Grpc.VoidResponse
    content.vb: Public Overridable Function Delete(request As ContentRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As VoidResponse
  overload: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Delete*
  nameWithType.vb: GrpcBlobStorageService.GrpcBlobStorageServiceClient.Delete(ContentRequest, Metadata, Date?, CancellationToken)
  fullName.vb: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Delete(IdeaStatiCa.Plugin.Grpc.ContentRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: Delete(ContentRequest, Metadata, Date?, CancellationToken)
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Delete(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.CallOptions)
  commentId: M:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Delete(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.CallOptions)
  id: Delete(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.CallOptions)
  parent: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  langs:
  - csharp
  - vb
  name: Delete(ContentRequest, CallOptions)
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.Delete(ContentRequest, CallOptions)
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Delete(IdeaStatiCa.Plugin.Grpc.ContentRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: Delete
    path: ../src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
    startLine: 369
  assemblies:
  - IdeaStatiCa.Plugin
  namespace: IdeaStatiCa.Plugin.Grpc
  syntax:
    content: public virtual VoidResponse Delete(ContentRequest request, CallOptions options)
    parameters:
    - id: request
      type: IdeaStatiCa.Plugin.Grpc.ContentRequest
    - id: options
      type: Grpc.Core.CallOptions
    return:
      type: IdeaStatiCa.Plugin.Grpc.VoidResponse
    content.vb: Public Overridable Function Delete(request As ContentRequest, options As CallOptions) As VoidResponse
  overload: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Delete*
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.DeleteAsync(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.DeleteAsync(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: DeleteAsync(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  langs:
  - csharp
  - vb
  name: DeleteAsync(ContentRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.DeleteAsync(ContentRequest, Metadata, DateTime?, CancellationToken)
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.DeleteAsync(IdeaStatiCa.Plugin.Grpc.ContentRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: DeleteAsync
    path: ../src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
    startLine: 374
  assemblies:
  - IdeaStatiCa.Plugin
  namespace: IdeaStatiCa.Plugin.Grpc
  syntax:
    content: public virtual AsyncUnaryCall<VoidResponse> DeleteAsync(ContentRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: IdeaStatiCa.Plugin.Grpc.ContentRequest
    - id: headers
      type: Grpc.Core.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: Grpc.Core.AsyncUnaryCall{IdeaStatiCa.Plugin.Grpc.VoidResponse}
    content.vb: Public Overridable Function DeleteAsync(request As ContentRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of VoidResponse)
  overload: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.DeleteAsync*
  nameWithType.vb: GrpcBlobStorageService.GrpcBlobStorageServiceClient.DeleteAsync(ContentRequest, Metadata, Date?, CancellationToken)
  fullName.vb: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.DeleteAsync(IdeaStatiCa.Plugin.Grpc.ContentRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: DeleteAsync(ContentRequest, Metadata, Date?, CancellationToken)
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.DeleteAsync(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.CallOptions)
  commentId: M:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.DeleteAsync(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.CallOptions)
  id: DeleteAsync(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.CallOptions)
  parent: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  langs:
  - csharp
  - vb
  name: DeleteAsync(ContentRequest, CallOptions)
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.DeleteAsync(ContentRequest, CallOptions)
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.DeleteAsync(IdeaStatiCa.Plugin.Grpc.ContentRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: DeleteAsync
    path: ../src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
    startLine: 379
  assemblies:
  - IdeaStatiCa.Plugin
  namespace: IdeaStatiCa.Plugin.Grpc
  syntax:
    content: public virtual AsyncUnaryCall<VoidResponse> DeleteAsync(ContentRequest request, CallOptions options)
    parameters:
    - id: request
      type: IdeaStatiCa.Plugin.Grpc.ContentRequest
    - id: options
      type: Grpc.Core.CallOptions
    return:
      type: Grpc.Core.AsyncUnaryCall{IdeaStatiCa.Plugin.Grpc.VoidResponse}
    content.vb: Public Overridable Function DeleteAsync(request As ContentRequest, options As CallOptions) As AsyncUnaryCall(Of VoidResponse)
  overload: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.DeleteAsync*
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntries(IdeaStatiCa.Plugin.Grpc.GetEntriesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntries(IdeaStatiCa.Plugin.Grpc.GetEntriesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: GetEntries(IdeaStatiCa.Plugin.Grpc.GetEntriesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  langs:
  - csharp
  - vb
  name: GetEntries(GetEntriesRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntries(GetEntriesRequest, Metadata, DateTime?, CancellationToken)
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntries(IdeaStatiCa.Plugin.Grpc.GetEntriesRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: GetEntries
    path: ../src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
    startLine: 384
  assemblies:
  - IdeaStatiCa.Plugin
  namespace: IdeaStatiCa.Plugin.Grpc
  syntax:
    content: public virtual GetEntriesResponse GetEntries(GetEntriesRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: IdeaStatiCa.Plugin.Grpc.GetEntriesRequest
    - id: headers
      type: Grpc.Core.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: IdeaStatiCa.Plugin.Grpc.GetEntriesResponse
    content.vb: Public Overridable Function GetEntries(request As GetEntriesRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As GetEntriesResponse
  overload: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntries*
  nameWithType.vb: GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntries(GetEntriesRequest, Metadata, Date?, CancellationToken)
  fullName.vb: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntries(IdeaStatiCa.Plugin.Grpc.GetEntriesRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: GetEntries(GetEntriesRequest, Metadata, Date?, CancellationToken)
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntries(IdeaStatiCa.Plugin.Grpc.GetEntriesRequest,Grpc.Core.CallOptions)
  commentId: M:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntries(IdeaStatiCa.Plugin.Grpc.GetEntriesRequest,Grpc.Core.CallOptions)
  id: GetEntries(IdeaStatiCa.Plugin.Grpc.GetEntriesRequest,Grpc.Core.CallOptions)
  parent: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  langs:
  - csharp
  - vb
  name: GetEntries(GetEntriesRequest, CallOptions)
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntries(GetEntriesRequest, CallOptions)
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntries(IdeaStatiCa.Plugin.Grpc.GetEntriesRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: GetEntries
    path: ../src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
    startLine: 389
  assemblies:
  - IdeaStatiCa.Plugin
  namespace: IdeaStatiCa.Plugin.Grpc
  syntax:
    content: public virtual GetEntriesResponse GetEntries(GetEntriesRequest request, CallOptions options)
    parameters:
    - id: request
      type: IdeaStatiCa.Plugin.Grpc.GetEntriesRequest
    - id: options
      type: Grpc.Core.CallOptions
    return:
      type: IdeaStatiCa.Plugin.Grpc.GetEntriesResponse
    content.vb: Public Overridable Function GetEntries(request As GetEntriesRequest, options As CallOptions) As GetEntriesResponse
  overload: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntries*
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntriesAsync(IdeaStatiCa.Plugin.Grpc.GetEntriesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntriesAsync(IdeaStatiCa.Plugin.Grpc.GetEntriesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: GetEntriesAsync(IdeaStatiCa.Plugin.Grpc.GetEntriesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  langs:
  - csharp
  - vb
  name: GetEntriesAsync(GetEntriesRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntriesAsync(GetEntriesRequest, Metadata, DateTime?, CancellationToken)
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntriesAsync(IdeaStatiCa.Plugin.Grpc.GetEntriesRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: GetEntriesAsync
    path: ../src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
    startLine: 394
  assemblies:
  - IdeaStatiCa.Plugin
  namespace: IdeaStatiCa.Plugin.Grpc
  syntax:
    content: public virtual AsyncUnaryCall<GetEntriesResponse> GetEntriesAsync(GetEntriesRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: IdeaStatiCa.Plugin.Grpc.GetEntriesRequest
    - id: headers
      type: Grpc.Core.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: Grpc.Core.AsyncUnaryCall{IdeaStatiCa.Plugin.Grpc.GetEntriesResponse}
    content.vb: Public Overridable Function GetEntriesAsync(request As GetEntriesRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of GetEntriesResponse)
  overload: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntriesAsync*
  nameWithType.vb: GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntriesAsync(GetEntriesRequest, Metadata, Date?, CancellationToken)
  fullName.vb: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntriesAsync(IdeaStatiCa.Plugin.Grpc.GetEntriesRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: GetEntriesAsync(GetEntriesRequest, Metadata, Date?, CancellationToken)
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntriesAsync(IdeaStatiCa.Plugin.Grpc.GetEntriesRequest,Grpc.Core.CallOptions)
  commentId: M:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntriesAsync(IdeaStatiCa.Plugin.Grpc.GetEntriesRequest,Grpc.Core.CallOptions)
  id: GetEntriesAsync(IdeaStatiCa.Plugin.Grpc.GetEntriesRequest,Grpc.Core.CallOptions)
  parent: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  langs:
  - csharp
  - vb
  name: GetEntriesAsync(GetEntriesRequest, CallOptions)
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntriesAsync(GetEntriesRequest, CallOptions)
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntriesAsync(IdeaStatiCa.Plugin.Grpc.GetEntriesRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: GetEntriesAsync
    path: ../src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
    startLine: 399
  assemblies:
  - IdeaStatiCa.Plugin
  namespace: IdeaStatiCa.Plugin.Grpc
  syntax:
    content: public virtual AsyncUnaryCall<GetEntriesResponse> GetEntriesAsync(GetEntriesRequest request, CallOptions options)
    parameters:
    - id: request
      type: IdeaStatiCa.Plugin.Grpc.GetEntriesRequest
    - id: options
      type: Grpc.Core.CallOptions
    return:
      type: Grpc.Core.AsyncUnaryCall{IdeaStatiCa.Plugin.Grpc.GetEntriesResponse}
    content.vb: Public Overridable Function GetEntriesAsync(request As GetEntriesRequest, options As CallOptions) As AsyncUnaryCall(Of GetEntriesResponse)
  overload: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntriesAsync*
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  commentId: M:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  id: NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  parent: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  langs:
  - csharp
  - vb
  name: NewInstance(ClientBaseConfiguration)
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.NewInstance(ClientBase.ClientBaseConfiguration)
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  type: Method
  source:
    remote:
      path: src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
      branch: add_wiki_content_to_docfx
      repo: https://github.com/idea-statica/ideastatica-public.git
    id: NewInstance
    path: ../src/IdeaStatiCa.Plugin/obj/Release/net48/Grpc/GrpcReflectionServiceContractGrpc.cs
    startLine: 405
  assemblies:
  - IdeaStatiCa.Plugin
  namespace: IdeaStatiCa.Plugin.Grpc
  summary: Creates a new instance of client from given <code>ClientBaseConfiguration</code>.
  example: []
  syntax:
    content: protected override GrpcBlobStorageService.GrpcBlobStorageServiceClient NewInstance(ClientBase.ClientBaseConfiguration configuration)
    parameters:
    - id: configuration
      type: Grpc.Core.ClientBase.ClientBaseConfiguration
    return:
      type: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
    content.vb: Protected Overrides Function NewInstance(configuration As ClientBase.ClientBaseConfiguration) As GrpcBlobStorageService.GrpcBlobStorageServiceClient
  overridden: Grpc.Core.ClientBase{IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  overload: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.NewInstance*
references:
- uid: IdeaStatiCa.Plugin.Grpc
  commentId: N:IdeaStatiCa.Plugin.Grpc
  href: IdeaStatiCa.html
  name: IdeaStatiCa.Plugin.Grpc
  nameWithType: IdeaStatiCa.Plugin.Grpc
  fullName: IdeaStatiCa.Plugin.Grpc
  spec.csharp:
  - uid: IdeaStatiCa
    name: IdeaStatiCa
    href: IdeaStatiCa.html
  - name: .
  - uid: IdeaStatiCa.Plugin
    name: Plugin
    href: IdeaStatiCa.Plugin.html
  - name: .
  - uid: IdeaStatiCa.Plugin.Grpc
    name: Grpc
    href: IdeaStatiCa.Plugin.Grpc.html
  spec.vb:
  - uid: IdeaStatiCa
    name: IdeaStatiCa
    href: IdeaStatiCa.html
  - name: .
  - uid: IdeaStatiCa.Plugin
    name: Plugin
    href: IdeaStatiCa.Plugin.html
  - name: .
  - uid: IdeaStatiCa.Plugin.Grpc
    name: Grpc
    href: IdeaStatiCa.Plugin.Grpc.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Grpc.Core.ClientBase
  commentId: T:Grpc.Core.ClientBase
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: ClientBase
  nameWithType: ClientBase
  fullName: Grpc.Core.ClientBase
- uid: Grpc.Core.ClientBase{IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient}
  commentId: T:Grpc.Core.ClientBase{IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient}
  parent: Grpc.Core
  definition: Grpc.Core.ClientBase`1
  href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: ClientBase<GrpcBlobStorageService.GrpcBlobStorageServiceClient>
  nameWithType: ClientBase<GrpcBlobStorageService.GrpcBlobStorageServiceClient>
  fullName: Grpc.Core.ClientBase<IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient>
  nameWithType.vb: ClientBase(Of GrpcBlobStorageService.GrpcBlobStorageServiceClient)
  fullName.vb: Grpc.Core.ClientBase(Of IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient)
  name.vb: ClientBase(Of GrpcBlobStorageService.GrpcBlobStorageServiceClient)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: <
  - uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService
    name: GrpcBlobStorageService
    href: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.html
  - name: .
  - uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
    name: GrpcBlobStorageServiceClient
    href: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.ClientBase`1
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: (
  - name: Of
  - name: " "
  - uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService
    name: GrpcBlobStorageService
    href: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.html
  - name: .
  - uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
    name: GrpcBlobStorageServiceClient
    href: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.html
  - name: )
- uid: Grpc.Core.ClientBase{IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient}.WithHost(System.String)
  commentId: M:Grpc.Core.ClientBase{IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient}.WithHost(System.String)
  parent: Grpc.Core.ClientBase{IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient}
  definition: Grpc.Core.ClientBase`1.WithHost(System.String)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: WithHost(string)
  nameWithType: ClientBase<GrpcBlobStorageService.GrpcBlobStorageServiceClient>.WithHost(string)
  fullName: Grpc.Core.ClientBase<IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient>.WithHost(string)
  nameWithType.vb: ClientBase(Of GrpcBlobStorageService.GrpcBlobStorageServiceClient).WithHost(String)
  fullName.vb: Grpc.Core.ClientBase(Of IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient).WithHost(String)
  name.vb: WithHost(String)
  spec.csharp:
  - uid: Grpc.Core.ClientBase{IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient}.WithHost(System.String)
    name: WithHost
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Grpc.Core.ClientBase{IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient}.WithHost(System.String)
    name: WithHost
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Grpc.Core.ClientBase.CallInvoker
  commentId: P:Grpc.Core.ClientBase.CallInvoker
  parent: Grpc.Core.ClientBase
  isExternal: true
  href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: CallInvoker
  nameWithType: ClientBase.CallInvoker
  fullName: Grpc.Core.ClientBase.CallInvoker
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core
  commentId: N:Grpc.Core
  isExternal: true
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
  spec.csharp:
  - uid: Grpc
    name: Grpc
    isExternal: true
  - name: .
  - uid: Grpc.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Grpc
    name: Grpc
    isExternal: true
  - name: .
  - uid: Grpc.Core
    name: Core
    isExternal: true
- uid: Grpc.Core.ClientBase`1
  commentId: T:Grpc.Core.ClientBase`1
  isExternal: true
  href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: ClientBase<T>
  nameWithType: ClientBase<T>
  fullName: Grpc.Core.ClientBase<T>
  nameWithType.vb: ClientBase(Of T)
  fullName.vb: Grpc.Core.ClientBase(Of T)
  name.vb: ClientBase(Of T)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.ClientBase`1
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Grpc.Core.ClientBase`1.WithHost(System.String)
  commentId: M:Grpc.Core.ClientBase`1.WithHost(System.String)
  isExternal: true
  href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: WithHost(string)
  nameWithType: ClientBase<T>.WithHost(string)
  fullName: Grpc.Core.ClientBase<T>.WithHost(string)
  nameWithType.vb: ClientBase(Of T).WithHost(String)
  fullName.vb: Grpc.Core.ClientBase(Of T).WithHost(String)
  name.vb: WithHost(String)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1.WithHost(System.String)
    name: WithHost
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Grpc.Core.ClientBase`1.WithHost(System.String)
    name: WithHost
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.#ctor*
  commentId: Overload:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.#ctor
  href: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.html#IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.#ctor(Grpc.Core.ChannelBase)
  name: GrpcBlobStorageServiceClient
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.GrpcBlobStorageServiceClient
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GrpcBlobStorageServiceClient
  nameWithType.vb: GrpcBlobStorageService.GrpcBlobStorageServiceClient.New
  fullName.vb: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.New
  name.vb: New
- uid: Grpc.Core.ChannelBase
  commentId: T:Grpc.Core.ChannelBase
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/ChannelBase.cs
  name: ChannelBase
  nameWithType: ChannelBase
  fullName: Grpc.Core.ChannelBase
- uid: Grpc.Core.CallInvoker
  commentId: T:Grpc.Core.CallInvoker
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/CallInvoker.cs
  name: CallInvoker
  nameWithType: CallInvoker
  fullName: Grpc.Core.CallInvoker
- uid: Grpc.Core.ClientBase.ClientBaseConfiguration
  commentId: T:Grpc.Core.ClientBase.ClientBaseConfiguration
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: ClientBase.ClientBaseConfiguration
  nameWithType: ClientBase.ClientBaseConfiguration
  fullName: Grpc.Core.ClientBase.ClientBaseConfiguration
  spec.csharp:
  - uid: Grpc.Core.ClientBase
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: .
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/ClientBase.cs
  spec.vb:
  - uid: Grpc.Core.ClientBase
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: .
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/ClientBase.cs
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Write*
  commentId: Overload:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Write
  href: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.html#IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Write(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: Write
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.Write
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Write
- uid: Grpc.Core.Metadata
  commentId: T:Grpc.Core.Metadata
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/Metadata.cs
  name: Metadata
  nameWithType: Metadata
  fullName: Grpc.Core.Metadata
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime?
  nameWithType: DateTime?
  fullName: System.DateTime?
  nameWithType.vb: Date?
  fullName.vb: Date?
  name.vb: Date?
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Grpc.Core.AsyncClientStreamingCall{IdeaStatiCa.Plugin.Grpc.ContentData,IdeaStatiCa.Plugin.Grpc.VoidResponse}
  commentId: T:Grpc.Core.AsyncClientStreamingCall{IdeaStatiCa.Plugin.Grpc.ContentData,IdeaStatiCa.Plugin.Grpc.VoidResponse}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncClientStreamingCall`2
  href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/AsyncClientStreamingCall.cs
  name: AsyncClientStreamingCall<ContentData, VoidResponse>
  nameWithType: AsyncClientStreamingCall<ContentData, VoidResponse>
  fullName: Grpc.Core.AsyncClientStreamingCall<IdeaStatiCa.Plugin.Grpc.ContentData, IdeaStatiCa.Plugin.Grpc.VoidResponse>
  nameWithType.vb: AsyncClientStreamingCall(Of ContentData, VoidResponse)
  fullName.vb: Grpc.Core.AsyncClientStreamingCall(Of IdeaStatiCa.Plugin.Grpc.ContentData, IdeaStatiCa.Plugin.Grpc.VoidResponse)
  name.vb: AsyncClientStreamingCall(Of ContentData, VoidResponse)
  spec.csharp:
  - uid: Grpc.Core.AsyncClientStreamingCall`2
    name: AsyncClientStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/AsyncClientStreamingCall.cs
  - name: <
  - uid: IdeaStatiCa.Plugin.Grpc.ContentData
    name: ContentData
    href: IdeaStatiCa.Plugin.Grpc.ContentData.html
  - name: ','
  - name: " "
  - uid: IdeaStatiCa.Plugin.Grpc.VoidResponse
    name: VoidResponse
    href: IdeaStatiCa.Plugin.Grpc.VoidResponse.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncClientStreamingCall`2
    name: AsyncClientStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/AsyncClientStreamingCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: IdeaStatiCa.Plugin.Grpc.ContentData
    name: ContentData
    href: IdeaStatiCa.Plugin.Grpc.ContentData.html
  - name: ','
  - name: " "
  - uid: IdeaStatiCa.Plugin.Grpc.VoidResponse
    name: VoidResponse
    href: IdeaStatiCa.Plugin.Grpc.VoidResponse.html
  - name: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: Grpc.Core.AsyncClientStreamingCall`2
  commentId: T:Grpc.Core.AsyncClientStreamingCall`2
  isExternal: true
  href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/AsyncClientStreamingCall.cs
  name: AsyncClientStreamingCall<TRequest, TResponse>
  nameWithType: AsyncClientStreamingCall<TRequest, TResponse>
  fullName: Grpc.Core.AsyncClientStreamingCall<TRequest, TResponse>
  nameWithType.vb: AsyncClientStreamingCall(Of TRequest, TResponse)
  fullName.vb: Grpc.Core.AsyncClientStreamingCall(Of TRequest, TResponse)
  name.vb: AsyncClientStreamingCall(Of TRequest, TResponse)
  spec.csharp:
  - uid: Grpc.Core.AsyncClientStreamingCall`2
    name: AsyncClientStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/AsyncClientStreamingCall.cs
  - name: <
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncClientStreamingCall`2
    name: AsyncClientStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/AsyncClientStreamingCall.cs
  - name: (
  - name: Of
  - name: " "
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: )
- uid: Grpc.Core.CallOptions
  commentId: T:Grpc.Core.CallOptions
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/CallOptions.cs
  name: CallOptions
  nameWithType: CallOptions
  fullName: Grpc.Core.CallOptions
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Read*
  commentId: Overload:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Read
  href: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.html#IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Read(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: Read
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.Read
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Read
- uid: IdeaStatiCa.Plugin.Grpc.ContentRequest
  commentId: T:IdeaStatiCa.Plugin.Grpc.ContentRequest
  parent: IdeaStatiCa.Plugin.Grpc
  href: IdeaStatiCa.Plugin.Grpc.ContentRequest.html
  name: ContentRequest
  nameWithType: ContentRequest
  fullName: IdeaStatiCa.Plugin.Grpc.ContentRequest
- uid: Grpc.Core.AsyncServerStreamingCall{IdeaStatiCa.Plugin.Grpc.ContentData}
  commentId: T:Grpc.Core.AsyncServerStreamingCall{IdeaStatiCa.Plugin.Grpc.ContentData}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncServerStreamingCall`1
  href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/AsyncServerStreamingCall.cs
  name: AsyncServerStreamingCall<ContentData>
  nameWithType: AsyncServerStreamingCall<ContentData>
  fullName: Grpc.Core.AsyncServerStreamingCall<IdeaStatiCa.Plugin.Grpc.ContentData>
  nameWithType.vb: AsyncServerStreamingCall(Of ContentData)
  fullName.vb: Grpc.Core.AsyncServerStreamingCall(Of IdeaStatiCa.Plugin.Grpc.ContentData)
  name.vb: AsyncServerStreamingCall(Of ContentData)
  spec.csharp:
  - uid: Grpc.Core.AsyncServerStreamingCall`1
    name: AsyncServerStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/AsyncServerStreamingCall.cs
  - name: <
  - uid: IdeaStatiCa.Plugin.Grpc.ContentData
    name: ContentData
    href: IdeaStatiCa.Plugin.Grpc.ContentData.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncServerStreamingCall`1
    name: AsyncServerStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/AsyncServerStreamingCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: IdeaStatiCa.Plugin.Grpc.ContentData
    name: ContentData
    href: IdeaStatiCa.Plugin.Grpc.ContentData.html
  - name: )
- uid: Grpc.Core.AsyncServerStreamingCall`1
  commentId: T:Grpc.Core.AsyncServerStreamingCall`1
  isExternal: true
  href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/AsyncServerStreamingCall.cs
  name: AsyncServerStreamingCall<TResponse>
  nameWithType: AsyncServerStreamingCall<TResponse>
  fullName: Grpc.Core.AsyncServerStreamingCall<TResponse>
  nameWithType.vb: AsyncServerStreamingCall(Of TResponse)
  fullName.vb: Grpc.Core.AsyncServerStreamingCall(Of TResponse)
  name.vb: AsyncServerStreamingCall(Of TResponse)
  spec.csharp:
  - uid: Grpc.Core.AsyncServerStreamingCall`1
    name: AsyncServerStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/AsyncServerStreamingCall.cs
  - name: <
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncServerStreamingCall`1
    name: AsyncServerStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/AsyncServerStreamingCall.cs
  - name: (
  - name: Of
  - name: " "
  - name: TResponse
  - name: )
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Exist*
  commentId: Overload:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Exist
  href: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.html#IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Exist(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: Exist
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.Exist
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Exist
- uid: IdeaStatiCa.Plugin.Grpc.ExistResponse
  commentId: T:IdeaStatiCa.Plugin.Grpc.ExistResponse
  parent: IdeaStatiCa.Plugin.Grpc
  href: IdeaStatiCa.Plugin.Grpc.ExistResponse.html
  name: ExistResponse
  nameWithType: ExistResponse
  fullName: IdeaStatiCa.Plugin.Grpc.ExistResponse
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.ExistAsync*
  commentId: Overload:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.ExistAsync
  href: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.html#IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.ExistAsync(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: ExistAsync
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.ExistAsync
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.ExistAsync
- uid: Grpc.Core.AsyncUnaryCall{IdeaStatiCa.Plugin.Grpc.ExistResponse}
  commentId: T:Grpc.Core.AsyncUnaryCall{IdeaStatiCa.Plugin.Grpc.ExistResponse}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<ExistResponse>
  nameWithType: AsyncUnaryCall<ExistResponse>
  fullName: Grpc.Core.AsyncUnaryCall<IdeaStatiCa.Plugin.Grpc.ExistResponse>
  nameWithType.vb: AsyncUnaryCall(Of ExistResponse)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of IdeaStatiCa.Plugin.Grpc.ExistResponse)
  name.vb: AsyncUnaryCall(Of ExistResponse)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: IdeaStatiCa.Plugin.Grpc.ExistResponse
    name: ExistResponse
    href: IdeaStatiCa.Plugin.Grpc.ExistResponse.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: IdeaStatiCa.Plugin.Grpc.ExistResponse
    name: ExistResponse
    href: IdeaStatiCa.Plugin.Grpc.ExistResponse.html
  - name: )
- uid: Grpc.Core.AsyncUnaryCall`1
  commentId: T:Grpc.Core.AsyncUnaryCall`1
  isExternal: true
  href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<TResponse>
  nameWithType: AsyncUnaryCall<TResponse>
  fullName: Grpc.Core.AsyncUnaryCall<TResponse>
  nameWithType.vb: AsyncUnaryCall(Of TResponse)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of TResponse)
  name.vb: AsyncUnaryCall(Of TResponse)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - name: TResponse
  - name: )
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Delete*
  commentId: Overload:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Delete
  href: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.html#IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Delete(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: Delete
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.Delete
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.Delete
- uid: IdeaStatiCa.Plugin.Grpc.VoidResponse
  commentId: T:IdeaStatiCa.Plugin.Grpc.VoidResponse
  parent: IdeaStatiCa.Plugin.Grpc
  href: IdeaStatiCa.Plugin.Grpc.VoidResponse.html
  name: VoidResponse
  nameWithType: VoidResponse
  fullName: IdeaStatiCa.Plugin.Grpc.VoidResponse
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.DeleteAsync*
  commentId: Overload:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.DeleteAsync
  href: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.html#IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.DeleteAsync(IdeaStatiCa.Plugin.Grpc.ContentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: DeleteAsync
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.DeleteAsync
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.DeleteAsync
- uid: Grpc.Core.AsyncUnaryCall{IdeaStatiCa.Plugin.Grpc.VoidResponse}
  commentId: T:Grpc.Core.AsyncUnaryCall{IdeaStatiCa.Plugin.Grpc.VoidResponse}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<VoidResponse>
  nameWithType: AsyncUnaryCall<VoidResponse>
  fullName: Grpc.Core.AsyncUnaryCall<IdeaStatiCa.Plugin.Grpc.VoidResponse>
  nameWithType.vb: AsyncUnaryCall(Of VoidResponse)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of IdeaStatiCa.Plugin.Grpc.VoidResponse)
  name.vb: AsyncUnaryCall(Of VoidResponse)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: IdeaStatiCa.Plugin.Grpc.VoidResponse
    name: VoidResponse
    href: IdeaStatiCa.Plugin.Grpc.VoidResponse.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: IdeaStatiCa.Plugin.Grpc.VoidResponse
    name: VoidResponse
    href: IdeaStatiCa.Plugin.Grpc.VoidResponse.html
  - name: )
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntries*
  commentId: Overload:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntries
  href: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.html#IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntries(IdeaStatiCa.Plugin.Grpc.GetEntriesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: GetEntries
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntries
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntries
- uid: IdeaStatiCa.Plugin.Grpc.GetEntriesRequest
  commentId: T:IdeaStatiCa.Plugin.Grpc.GetEntriesRequest
  parent: IdeaStatiCa.Plugin.Grpc
  href: IdeaStatiCa.Plugin.Grpc.GetEntriesRequest.html
  name: GetEntriesRequest
  nameWithType: GetEntriesRequest
  fullName: IdeaStatiCa.Plugin.Grpc.GetEntriesRequest
- uid: IdeaStatiCa.Plugin.Grpc.GetEntriesResponse
  commentId: T:IdeaStatiCa.Plugin.Grpc.GetEntriesResponse
  parent: IdeaStatiCa.Plugin.Grpc
  href: IdeaStatiCa.Plugin.Grpc.GetEntriesResponse.html
  name: GetEntriesResponse
  nameWithType: GetEntriesResponse
  fullName: IdeaStatiCa.Plugin.Grpc.GetEntriesResponse
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntriesAsync*
  commentId: Overload:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntriesAsync
  href: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.html#IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntriesAsync(IdeaStatiCa.Plugin.Grpc.GetEntriesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: GetEntriesAsync
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntriesAsync
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.GetEntriesAsync
- uid: Grpc.Core.AsyncUnaryCall{IdeaStatiCa.Plugin.Grpc.GetEntriesResponse}
  commentId: T:Grpc.Core.AsyncUnaryCall{IdeaStatiCa.Plugin.Grpc.GetEntriesResponse}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<GetEntriesResponse>
  nameWithType: AsyncUnaryCall<GetEntriesResponse>
  fullName: Grpc.Core.AsyncUnaryCall<IdeaStatiCa.Plugin.Grpc.GetEntriesResponse>
  nameWithType.vb: AsyncUnaryCall(Of GetEntriesResponse)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of IdeaStatiCa.Plugin.Grpc.GetEntriesResponse)
  name.vb: AsyncUnaryCall(Of GetEntriesResponse)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: IdeaStatiCa.Plugin.Grpc.GetEntriesResponse
    name: GetEntriesResponse
    href: IdeaStatiCa.Plugin.Grpc.GetEntriesResponse.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: IdeaStatiCa.Plugin.Grpc.GetEntriesResponse
    name: GetEntriesResponse
    href: IdeaStatiCa.Plugin.Grpc.GetEntriesResponse.html
  - name: )
- uid: Grpc.Core.ClientBase{IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  commentId: M:Grpc.Core.ClientBase{IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  parent: Grpc.Core.ClientBase{IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient}
  definition: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: NewInstance(ClientBaseConfiguration)
  nameWithType: ClientBase<GrpcBlobStorageService.GrpcBlobStorageServiceClient>.NewInstance(ClientBase.ClientBaseConfiguration)
  fullName: Grpc.Core.ClientBase<IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient>.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  nameWithType.vb: ClientBase(Of GrpcBlobStorageService.GrpcBlobStorageServiceClient).NewInstance(ClientBase.ClientBaseConfiguration)
  fullName.vb: Grpc.Core.ClientBase(Of IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient).NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  spec.csharp:
  - uid: Grpc.Core.ClientBase{IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
    name: NewInstance
    isExternal: true
  - name: (
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: )
  spec.vb:
  - uid: Grpc.Core.ClientBase{IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
    name: NewInstance
    isExternal: true
  - name: (
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: )
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.NewInstance*
  commentId: Overload:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.NewInstance
  href: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.html#IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  name: NewInstance
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient.NewInstance
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.NewInstance
- uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  commentId: T:IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  parent: IdeaStatiCa.Plugin.Grpc
  href: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.html
  name: GrpcBlobStorageService.GrpcBlobStorageServiceClient
  nameWithType: GrpcBlobStorageService.GrpcBlobStorageServiceClient
  fullName: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
  spec.csharp:
  - uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService
    name: GrpcBlobStorageService
    href: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.html
  - name: .
  - uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
    name: GrpcBlobStorageServiceClient
    href: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.html
  spec.vb:
  - uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService
    name: GrpcBlobStorageService
    href: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.html
  - name: .
  - uid: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient
    name: GrpcBlobStorageServiceClient
    href: IdeaStatiCa.Plugin.Grpc.GrpcBlobStorageService.GrpcBlobStorageServiceClient.html
- uid: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  commentId: M:Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  isExternal: true
  href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: NewInstance(ClientBaseConfiguration)
  nameWithType: ClientBase<T>.NewInstance(ClientBase.ClientBaseConfiguration)
  fullName: Grpc.Core.ClientBase<T>.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  nameWithType.vb: ClientBase(Of T).NewInstance(ClientBase.ClientBaseConfiguration)
  fullName.vb: Grpc.Core.ClientBase(Of T).NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
    name: NewInstance
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: (
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: )
  spec.vb:
  - uid: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
    name: NewInstance
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: (
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc/blob/53d69cc581c5b7305708587f4f1939278477c28a/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: )
