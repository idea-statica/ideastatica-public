name: Deploy
on:
  push:
    tags:
      - '*'

env:
   sln_filename: ${{ github.workspace }}\main\examples\IdeaStatiCa-SDK-Examples.sln
   working_dir: ${{ github.workspace }}\main\examples

jobs:
  BuildAndTest:
    name: "Update and build IdeaStatiCa-SDK-Examples"
    runs-on: windows-latest

    steps:
    - name: Print 1
      run: echo ${{ github.ref }}

    - name: Print 2
      run: echo ${{ env.working_dir }}

    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}
        path: main
        
    - name: Setup .NET
      uses: microsoft/setup-msbuild@v1

    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'

    - name: Setup nuget.exe
      uses: NuGet/setup-nuget@v2
      
    - name: Setup VSTest Path
      uses: darenm/Setup-VSTest@v1.2

    - name: Nuget restore dependencies DotnetBuildTools.sln
      run: nuget restore DotnetBuildTools.sln
      working-directory: main/tools/DotnetBuildTools

    - name: Build
      run: dotnet build DotnetBuildTools.sln /p:Configuration=Release
      working-directory: main/tools/DotnetBuildTools

    - name: Nuget restore dependencies
      run: nuget restore IdeaStatiCa-SDK-Examples.sln
      working-directory: main/examples    

    # - name: 'Upload updated examples'
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: Updated examples
    #     path: ${{ github.workspace }}/main/examples
    #     if-no-files-found: error


    # - name: Nuget restore dependencies
    #   run: nuget restore IdeaStatiCa-SDK-Examples.sln
    #   working-directory: main/examples   

    - name: Build
      run: dotnet build ${{ env.sln_filename }} /p:Configuration=Release
      working-directory:  ${{ env.working_dir }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GH_RELEASE: ${{ secrets.GH_RELEASE }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    
    # - name: Upload Release Asset
    #   id: upload-release-asset 
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GH_RELEASE }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
    #     asset_path: ${{ github.workspace }}/main/examples/bimapi/RcsApiClient/bin/Release/net6.0-windows/
    #     asset_name: RcsApiClient.zip
    #     asset_content_type: application/zip


      
