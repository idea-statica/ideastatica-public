/*
 * Connection Rest API 1.0
 *
 * IDEA StatiCa Connection API, used for the automated design and calculation of steel connections.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: info@ideastatica.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = IdeaStatiCa.ConnectionApi.Client.OpenAPIDateConverter;

namespace IdeaStatiCa.ConnectionApi.Model
{
    /// <summary>
    /// ConResultSummary
    /// </summary>
    [DataContract(Name = "ConResultSummary")]
    public partial class ConResultSummary
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ConResultSummary" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="passed">passed.</param>
        /// <param name="resultSummary">resultSummary.</param>
        public ConResultSummary(int id = default(int), bool passed = default(bool), List<CheckResSummary> resultSummary = default(List<CheckResSummary>))
        {
            this.Id = id;
            this.Passed = passed;
            this.ResultSummary = resultSummary;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Gets or Sets Passed
        /// </summary>
        [DataMember(Name = "passed", EmitDefaultValue = true)]
        public bool Passed { get; set; }

        /// <summary>
        /// Gets or Sets ResultSummary
        /// </summary>
        [DataMember(Name = "resultSummary", EmitDefaultValue = true)]
        public List<CheckResSummary> ResultSummary { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ConResultSummary {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Passed: ").Append(Passed).Append("\n");
            sb.Append("  ResultSummary: ").Append(ResultSummary).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
