/*
 * Connection Rest API 1.0
 *
 * IDEA StatiCa Connection API, used for the automated design and calculation of steel connections.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: info@ideastatica.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = IdeaStatiCa.ConnectionApi.Client.OpenAPIDateConverter;

namespace IdeaStatiCa.ConnectionApi.Model
{
    /// <summary>
    /// IdeaParameterValidation
    /// </summary>
    [DataContract(Name = "IdeaParameterValidation")]
    public partial class IdeaParameterValidation
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="IdeaParameterValidation" /> class.
        /// </summary>
        /// <param name="validationExpression">validationExpression.</param>
        /// <param name="validationExpressionEvaluated">validationExpressionEvaluated.</param>
        /// <param name="lowerBound">lowerBound.</param>
        /// <param name="lowerBoundEvaluated">lowerBoundEvaluated.</param>
        /// <param name="upperBound">upperBound.</param>
        /// <param name="upperBoundEvaluated">upperBoundEvaluated.</param>
        /// <param name="validationStatus">validationStatus.</param>
        /// <param name="message">message.</param>
        public IdeaParameterValidation(string validationExpression = default(string), bool validationExpressionEvaluated = default(bool), string lowerBound = default(string), double lowerBoundEvaluated = default(double), string upperBound = default(string), double upperBoundEvaluated = default(double), string validationStatus = default(string), string message = default(string))
        {
            this.ValidationExpression = validationExpression;
            this.ValidationExpressionEvaluated = validationExpressionEvaluated;
            this.LowerBound = lowerBound;
            this.LowerBoundEvaluated = lowerBoundEvaluated;
            this.UpperBound = upperBound;
            this.UpperBoundEvaluated = upperBoundEvaluated;
            this.ValidationStatus = validationStatus;
            this.Message = message;
        }

        /// <summary>
        /// Gets or Sets ValidationExpression
        /// </summary>
        [DataMember(Name = "validationExpression", EmitDefaultValue = true)]
        public string ValidationExpression { get; set; }

        /// <summary>
        /// Gets or Sets ValidationExpressionEvaluated
        /// </summary>
        [DataMember(Name = "validationExpressionEvaluated", EmitDefaultValue = true)]
        public bool ValidationExpressionEvaluated { get; set; }

        /// <summary>
        /// Gets or Sets LowerBound
        /// </summary>
        [DataMember(Name = "lowerBound", EmitDefaultValue = true)]
        public string LowerBound { get; set; }

        /// <summary>
        /// Gets or Sets LowerBoundEvaluated
        /// </summary>
        [DataMember(Name = "lowerBoundEvaluated", EmitDefaultValue = false)]
        public double LowerBoundEvaluated { get; set; }

        /// <summary>
        /// Gets or Sets UpperBound
        /// </summary>
        [DataMember(Name = "upperBound", EmitDefaultValue = true)]
        public string UpperBound { get; set; }

        /// <summary>
        /// Gets or Sets UpperBoundEvaluated
        /// </summary>
        [DataMember(Name = "upperBoundEvaluated", EmitDefaultValue = false)]
        public double UpperBoundEvaluated { get; set; }

        /// <summary>
        /// Gets or Sets ValidationStatus
        /// </summary>
        [DataMember(Name = "validationStatus", EmitDefaultValue = true)]
        public string ValidationStatus { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name = "message", EmitDefaultValue = true)]
        public string Message { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class IdeaParameterValidation {\n");
            sb.Append("  ValidationExpression: ").Append(ValidationExpression).Append("\n");
            sb.Append("  ValidationExpressionEvaluated: ").Append(ValidationExpressionEvaluated).Append("\n");
            sb.Append("  LowerBound: ").Append(LowerBound).Append("\n");
            sb.Append("  LowerBoundEvaluated: ").Append(LowerBoundEvaluated).Append("\n");
            sb.Append("  UpperBound: ").Append(UpperBound).Append("\n");
            sb.Append("  UpperBoundEvaluated: ").Append(UpperBoundEvaluated).Append("\n");
            sb.Append("  ValidationStatus: ").Append(ValidationStatus).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
