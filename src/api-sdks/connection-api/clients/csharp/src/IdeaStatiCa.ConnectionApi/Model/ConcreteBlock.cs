/*
 * Connection Rest API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = IdeaStatiCa.ConnectionApi.Client.OpenAPIDateConverter;

namespace IdeaStatiCa.ConnectionApi.Model
{
    /// <summary>
    /// Data of concrete block
    /// </summary>
    [DataContract(Name = "ConcreteBlock")]
    public partial class ConcreteBlock : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ConcreteBlock" /> class.
        /// </summary>
        /// <param name="lenght">Lenght of ConcreteBlock.</param>
        /// <param name="width">Width of ConcreteBlock.</param>
        /// <param name="height">Height of ConcreteBlock.</param>
        /// <param name="material">Material of ConcreteBlock.</param>
        public ConcreteBlock(double lenght = default(double), double width = default(double), double height = default(double), string material = default(string))
        {
            this.Lenght = lenght;
            this.Width = width;
            this.Height = height;
            this.Material = material;
        }

        /// <summary>
        /// Lenght of ConcreteBlock
        /// </summary>
        /// <value>Lenght of ConcreteBlock</value>
        [DataMember(Name = "lenght", EmitDefaultValue = false)]
        public double Lenght { get; set; }

        /// <summary>
        /// Width of ConcreteBlock
        /// </summary>
        /// <value>Width of ConcreteBlock</value>
        [DataMember(Name = "width", EmitDefaultValue = false)]
        public double Width { get; set; }

        /// <summary>
        /// Height of ConcreteBlock
        /// </summary>
        /// <value>Height of ConcreteBlock</value>
        [DataMember(Name = "height", EmitDefaultValue = false)]
        public double Height { get; set; }

        /// <summary>
        /// Material of ConcreteBlock
        /// </summary>
        /// <value>Material of ConcreteBlock</value>
        [DataMember(Name = "material", EmitDefaultValue = true)]
        public string Material { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ConcreteBlock {\n");
            sb.Append("  Lenght: ").Append(Lenght).Append("\n");
            sb.Append("  Width: ").Append(Width).Append("\n");
            sb.Append("  Height: ").Append(Height).Append("\n");
            sb.Append("  Material: ").Append(Material).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
