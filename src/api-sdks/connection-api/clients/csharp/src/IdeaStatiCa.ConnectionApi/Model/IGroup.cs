/*
 * Connection Rest API 1.0
 *
 * API for designing steel connections
 *
 * The version of the OpenAPI document: 1.0
 * Contact: info@ideastatica.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = IdeaStatiCa.ConnectionApi.Client.OpenAPIDateConverter;

namespace IdeaStatiCa.ConnectionApi.Model
{
    /// <summary>
    /// IGroup
    /// </summary>
    [DataContract(Name = "IGroup")]
    public partial class IGroup
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="IGroup" /> class.
        /// </summary>
        /// <param name="faces">faces.</param>
        /// <param name="selected">selected.</param>
        /// <param name="lines">lines.</param>
        /// <param name="priority">priority.</param>
        /// <param name="text">text.</param>
        public IGroup(List<int> faces = default(List<int>), Selected selected = default(Selected), List<Line> lines = default(List<Line>), int priority = default(int), List<Text> text = default(List<Text>))
        {
            this.Faces = faces;
            this.Selected = selected;
            this.Lines = lines;
            this.Priority = priority;
            this.Text = text;
        }

        /// <summary>
        /// Gets or Sets Faces
        /// </summary>
        [DataMember(Name = "faces", EmitDefaultValue = true)]
        public List<int> Faces { get; set; }

        /// <summary>
        /// Gets or Sets Selected
        /// </summary>
        [DataMember(Name = "selected", EmitDefaultValue = false)]
        public Selected Selected { get; set; }

        /// <summary>
        /// Gets or Sets Lines
        /// </summary>
        [DataMember(Name = "lines", EmitDefaultValue = true)]
        public List<Line> Lines { get; set; }

        /// <summary>
        /// Gets or Sets Priority
        /// </summary>
        [DataMember(Name = "priority", EmitDefaultValue = false)]
        public int Priority { get; set; }

        /// <summary>
        /// Gets or Sets Text
        /// </summary>
        [DataMember(Name = "text", EmitDefaultValue = true)]
        public List<Text> Text { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class IGroup {\n");
            sb.Append("  Faces: ").Append(Faces).Append("\n");
            sb.Append("  Selected: ").Append(Selected).Append("\n");
            sb.Append("  Lines: ").Append(Lines).Append("\n");
            sb.Append("  Priority: ").Append(Priority).Append("\n");
            sb.Append("  Text: ").Append(Text).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
