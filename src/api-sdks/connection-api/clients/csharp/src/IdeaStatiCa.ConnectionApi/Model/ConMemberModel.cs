/*
 * Connection Rest API 1.0
 *
 * IDEA StatiCa Connection API, used for the automated design and calculation of steel connections.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: info@ideastatica.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = IdeaStatiCa.ConnectionApi.Client.OpenAPIDateConverter;

namespace IdeaStatiCa.ConnectionApi.Model
{
    /// <summary>
    /// ConMemberModel
    /// </summary>
    [DataContract(Name = "ConMemberModel")]
    public partial class ConMemberModel
    {

        /// <summary>
        /// Gets or Sets ForcesIn
        /// </summary>
        [DataMember(Name = "forcesIn", EmitDefaultValue = false)]
        public ConMemberForcesInEnum? ForcesIn { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ConMemberModel" /> class.
        /// </summary>
        /// <param name="modelType">modelType.</param>
        /// <param name="forcesIn">forcesIn.</param>
        /// <param name="x">x.</param>
        /// <param name="connectedMemberId">connectedMemberId.</param>
        public ConMemberModel(string modelType = default(string), ConMemberForcesInEnum? forcesIn = default(ConMemberForcesInEnum?), double? x = default(double?), int? connectedMemberId = default(int?))
        {
            this.ModelType = modelType;
            this.ForcesIn = forcesIn;
            this.X = x;
            this.ConnectedMemberId = connectedMemberId;
        }

        /// <summary>
        /// Gets or Sets ModelType
        /// </summary>
        [DataMember(Name = "modelType", EmitDefaultValue = true)]
        public string ModelType { get; set; }

        /// <summary>
        /// Gets or Sets X
        /// </summary>
        [DataMember(Name = "x", EmitDefaultValue = true)]
        public double? X { get; set; }

        /// <summary>
        /// Gets or Sets ConnectedMemberId
        /// </summary>
        [DataMember(Name = "connectedMemberId", EmitDefaultValue = true)]
        public int? ConnectedMemberId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ConMemberModel {\n");
            sb.Append("  ModelType: ").Append(ModelType).Append("\n");
            sb.Append("  ForcesIn: ").Append(ForcesIn).Append("\n");
            sb.Append("  X: ").Append(X).Append("\n");
            sb.Append("  ConnectedMemberId: ").Append(ConnectedMemberId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
