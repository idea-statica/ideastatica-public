/*
 * Connection Rest API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = IdeaStatiCa.ConnectionApi.Client.OpenAPIDateConverter;

namespace IdeaStatiCa.ConnectionApi.Model
{
    /// <summary>
    /// ConCalculationParameter
    /// </summary>
    [DataContract(Name = "ConCalculationParameter")]
    public partial class ConCalculationParameter : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets AnalysisType
        /// </summary>
        [DataMember(Name = "analysisType", EmitDefaultValue = false)]
        public ConAnalysisTypeEnum? AnalysisType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ConCalculationParameter" /> class.
        /// </summary>
        /// <param name="connectionIds">connectionIds.</param>
        /// <param name="analysisType">analysisType.</param>
        public ConCalculationParameter(List<int> connectionIds = default(List<int>), ConAnalysisTypeEnum? analysisType = default(ConAnalysisTypeEnum?))
        {
            this.ConnectionIds = connectionIds;
            this.AnalysisType = analysisType;
        }

        /// <summary>
        /// Gets or Sets ConnectionIds
        /// </summary>
        [DataMember(Name = "connectionIds", EmitDefaultValue = true)]
        public List<int> ConnectionIds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ConCalculationParameter {\n");
            sb.Append("  ConnectionIds: ").Append(ConnectionIds).Append("\n");
            sb.Append("  AnalysisType: ").Append(AnalysisType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
