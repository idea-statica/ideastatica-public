/*
 * Connection Rest API 1.0
 *
 * IDEA StatiCa Connection API, used for the automated design and calculation of steel connections.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: info@ideastatica.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = IdeaStatiCa.ConnectionApi.Client.OpenAPIDateConverter;

namespace IdeaStatiCa.ConnectionApi.Model
{
    /// <summary>
    /// Check value for Bolts
    /// </summary>
    [DataContract(Name = "CheckResBolt")]
    public partial class CheckResBolt
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CheckResBolt" /> class.
        /// </summary>
        /// <param name="name">Name.</param>
        /// <param name="unityCheck">Unity Check.</param>
        /// <param name="checkStatus">Status of the Check.</param>
        public CheckResBolt(string name = default(string), double unityCheck = default(double), bool checkStatus = default(bool))
        {
            this.Name = name;
            this.UnityCheck = unityCheck;
            this.CheckStatus = checkStatus;
        }

        /// <summary>
        /// Name
        /// </summary>
        /// <value>Name</value>
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Unity Check
        /// </summary>
        /// <value>Unity Check</value>
        [DataMember(Name = "unityCheck", EmitDefaultValue = false)]
        public double UnityCheck { get; set; }

        /// <summary>
        /// Status of the Check
        /// </summary>
        /// <value>Status of the Check</value>
        [DataMember(Name = "checkStatus", EmitDefaultValue = true)]
        public bool CheckStatus { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CheckResBolt {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  UnityCheck: ").Append(UnityCheck).Append("\n");
            sb.Append("  CheckStatus: ").Append(CheckStatus).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
