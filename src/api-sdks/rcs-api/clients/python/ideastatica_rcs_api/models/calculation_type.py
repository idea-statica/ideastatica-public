# coding: utf-8

"""
    RCS Rest API 1.0

    IDEA StatiCa RCS API, used for the automated design and calculation of reinforced concrete sections.

    The version of the OpenAPI document: 1.0
    Contact: info@ideastatica.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class CalculationType(str, Enum):
    """
    Calculation type
    """

    """
    allowed enum values
    """
    NOTDEFINED = 'notDefined'
    CAPACITY = 'capacity'
    RESPONSE = 'response'
    SHEAR = 'shear'
    TORSION = 'torsion'
    INTERACTION = 'interaction'
    FATIGUE = 'fatigue'
    STRESSLIMITATIONSHORT = 'stressLimitationShort'
    STRESSLIMITATIONLONG = 'stressLimitationLong'
    STRESSLIMITATIONSTAGE = 'stressLimitationStage'
    CRACKWIDTHSHORT = 'crackWidthShort'
    CRACKWIDTHLONG = 'crackWidthLong'
    CRACKWIDTHSTAGE = 'crackWidthStage'
    STIFFNESSSHORT = 'stiffnessShort'
    STIFFNESSLONG = 'stiffnessLong'
    STIFFNESSSTAGE = 'stiffnessStage'
    DEFLECTION = 'deflection'
    BRITTLEFAILURE = 'brittleFailure'
    DETAILING = 'detailing'
    LINEARSTRESSSHORT = 'linearStressShort'
    LINEARSTRESSLONG = 'linearStressLong'
    LINEARSTRESSSTAGE = 'linearStressStage'
    CROSSSECTIONCHARACTERISTICSSHORT = 'crossSectionCharacteristicsShort'
    CROSSSECTIONCHARACTERISTICSLONG = 'crossSectionCharacteristicsLong'
    CROSSSECTIONCHARACTERISTICSSTAGE = 'crossSectionCharacteristicsStage'
    BAUMANN = 'baumann'
    OVERALLCOLUMNRECALCULATION = 'overallColumnRecalculation'
    COLUMNFORCES = 'columnForces'
    PRESTRESSEFFECTS = 'prestressEffects'
    PRIMARYFORCES = 'primaryforces'
    LONGTERMLOSSES = 'longTermLosses'
    MNKAPPADIAGRAMULS = 'mnKappaDiagramULS'
    MNKAPPADIAGRAMSLSSHORT = 'mnKappaDiagramSLSShort'
    MNKAPPADIAGRAMSLSLONG = 'mnKappaDiagramSLSLong'
    CREEPANDSHRINKAGECOEFFICIENT = 'creepAndShrinkageCoefficient'
    CONCRETECOVER = 'concreteCover'
    CRACKINGCALCULATION = 'crackingCalculation'
    CRACKINGCALCULATIONSHORT = 'crackingCalculationShort'
    CRACKINGCALCULATIONLONG = 'crackingCalculationLong'
    REDISTRIBUTION = 'redistribution'
    INITILASTATEOFCROSSSECTION = 'initilaStateofCrossSection'
    STRUTANGLE = 'strutAngle'
    DESIGNREINFORCEMENT = 'designReinforcement'
    CAPACITYMESH = 'capacityMesh'
    STIFFNESSSTAGELONG = 'stiffnessStageLong'
    LONGTERMLOSSESCOEFFICIENT = 'longTermLossesCoefficient'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of CalculationType from a JSON string"""
        return cls(json.loads(json_str))


